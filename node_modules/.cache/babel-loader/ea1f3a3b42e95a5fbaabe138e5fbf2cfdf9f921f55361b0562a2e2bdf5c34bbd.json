{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pc\\\\Desktop\\\\Code_editor-html-css-js\\\\src\\\\Hook\\\\Savefile.js\";\nimport React from \"react\";\nimport \"./styles.css\";\nimport FileSaver from \"file-saver\"; // https://www.npmjs.com/package/file-saver\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst drawCanvas = async () => {\n  const canvas = document.createElement(\"canvas\");\n  canvas.height = 70;\n  canvas.width = 200;\n  const ctx = canvas.getContext(\"2d\");\n  ctx.fillStyle = \"#ff0000\"; // red\n  ctx.fillRect(0, 35, 100, 35); // x,y,width,height\n  ctx.font = \"30px Arial\";\n  ctx.fillStyle = \"black\";\n  ctx.fillText(\"Hello World\", 10, 50); // text,x,y\n  document.querySelector(\"#screenshot\").append(canvas);\n};\nconst saveTextExample = () => {\n  var blob = new Blob([\"Hello, world!\"], {\n    type: \"text/plain;charset=utf-8\"\n  });\n  FileSaver.saveAs(blob, \"hello world.txt\");\n};\nconst saveScreenshot = () => {\n  html2canvas(document.querySelector(\"#capture\")).then(canvas => {\n    // Export canvas as a blob\n    canvas.toBlob(function (blob) {\n      // Generate file download\n      window.saveAs(blob, \"yourwebsite_screenshot.png\");\n      // OR:\n      // FileSaver.saveAs(blob, \"screenshot.png\");\n    });\n  });\n};\n\nexport default function SaveFile() {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"capture\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Hello CodecccccSandbox\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Start editing to see some magic happen!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: appendScreenshot,\n      children: \"Append screenshot\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: saveScreenshot,\n      children: \"Save screenshot\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: saveTextExample,\n      children: \"Save text\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: drawCanvas,\n      children: \"Draw Canvas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Screeshot below:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"screenshot\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_c = SaveFile;\nvar _c;\n$RefreshReg$(_c, \"SaveFile\");","map":{"version":3,"names":["React","FileSaver","drawCanvas","canvas","document","createElement","height","width","ctx","getContext","fillStyle","fillRect","font","fillText","querySelector","append","saveTextExample","blob","Blob","type","saveAs","saveScreenshot","html2canvas","then","toBlob","window","SaveFile","appendScreenshot"],"sources":["C:/Users/pc/Desktop/Code_editor-html-css-js/src/Hook/Savefile.js"],"sourcesContent":["import React from \"react\";\r\nimport \"./styles.css\";\r\nimport FileSaver from \"file-saver\"; // https://www.npmjs.com/package/file-saver\r\n\r\nconst drawCanvas = async () => {\r\n  const canvas = document.createElement(\"canvas\");\r\n  canvas.height = 70;\r\n  canvas.width = 200;\r\n  const ctx = canvas.getContext(\"2d\");\r\n  ctx.fillStyle = \"#ff0000\"; // red\r\n  ctx.fillRect(0, 35, 100, 35); // x,y,width,height\r\n  ctx.font = \"30px Arial\";\r\n  ctx.fillStyle = \"black\";\r\n  ctx.fillText(\"Hello World\", 10, 50); // text,x,y\r\n  document.querySelector(\"#screenshot\").append(canvas);\r\n};\r\n\r\n\r\n\r\nconst saveTextExample = () => {\r\n  var blob = new Blob([\"Hello, world!\"], { type: \"text/plain;charset=utf-8\" });\r\n  FileSaver.saveAs(blob, \"hello world.txt\");\r\n};\r\n\r\nconst saveScreenshot = () => {\r\n  html2canvas(document.querySelector(\"#capture\")).then((canvas) => {\r\n    // Export canvas as a blob\r\n    canvas.toBlob(function (blob) {\r\n      // Generate file download\r\n      window.saveAs(blob, \"yourwebsite_screenshot.png\");\r\n      // OR:\r\n      // FileSaver.saveAs(blob, \"screenshot.png\");\r\n    });\r\n  });\r\n};\r\n\r\nexport default function SaveFile() {\r\n  return (\r\n    <>\r\n      <div  id=\"capture\">\r\n        <h1>Hello CodecccccSandbox</h1>\r\n        <h2>Start editing to see some magic happen!</h2>\r\n      </div>\r\n      <button onClick={appendScreenshot}>Append screenshot</button>\r\n      <button onClick={saveScreenshot}>Save screenshot</button>\r\n      <button onClick={saveTextExample}>Save text</button>\r\n      <button onClick={drawCanvas}>Draw Canvas</button>\r\n      <br />\r\n      <div>\r\n        <div>Screeshot below:</div>\r\n        <div id=\"screenshot\"></div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,cAAc;AACrB,OAAOC,SAAS,MAAM,YAAY,CAAC,CAAC;AAAA;AAAA;AAEpC,MAAMC,UAAU,GAAG,YAAY;EAC7B,MAAMC,MAAM,GAAGC,QAAQ,CAACC,aAAa,CAAC,QAAQ,CAAC;EAC/CF,MAAM,CAACG,MAAM,GAAG,EAAE;EAClBH,MAAM,CAACI,KAAK,GAAG,GAAG;EAClB,MAAMC,GAAG,GAAGL,MAAM,CAACM,UAAU,CAAC,IAAI,CAAC;EACnCD,GAAG,CAACE,SAAS,GAAG,SAAS,CAAC,CAAC;EAC3BF,GAAG,CAACG,QAAQ,CAAC,CAAC,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,CAAC,CAAC,CAAC;EAC9BH,GAAG,CAACI,IAAI,GAAG,YAAY;EACvBJ,GAAG,CAACE,SAAS,GAAG,OAAO;EACvBF,GAAG,CAACK,QAAQ,CAAC,aAAa,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC;EACrCT,QAAQ,CAACU,aAAa,CAAC,aAAa,CAAC,CAACC,MAAM,CAACZ,MAAM,CAAC;AACtD,CAAC;AAID,MAAMa,eAAe,GAAG,MAAM;EAC5B,IAAIC,IAAI,GAAG,IAAIC,IAAI,CAAC,CAAC,eAAe,CAAC,EAAE;IAAEC,IAAI,EAAE;EAA2B,CAAC,CAAC;EAC5ElB,SAAS,CAACmB,MAAM,CAACH,IAAI,EAAE,iBAAiB,CAAC;AAC3C,CAAC;AAED,MAAMI,cAAc,GAAG,MAAM;EAC3BC,WAAW,CAAClB,QAAQ,CAACU,aAAa,CAAC,UAAU,CAAC,CAAC,CAACS,IAAI,CAAEpB,MAAM,IAAK;IAC/D;IACAA,MAAM,CAACqB,MAAM,CAAC,UAAUP,IAAI,EAAE;MAC5B;MACAQ,MAAM,CAACL,MAAM,CAACH,IAAI,EAAE,4BAA4B,CAAC;MACjD;MACA;IACF,CAAC,CAAC;EACJ,CAAC,CAAC;AACJ,CAAC;;AAED,eAAe,SAASS,QAAQ,GAAG;EACjC,oBACE;IAAA,wBACE;MAAM,EAAE,EAAC,SAAS;MAAA,wBAChB;QAAA,UAAI;MAAsB;QAAA;QAAA;QAAA;MAAA,QAAK,eAC/B;QAAA,UAAI;MAAuC;QAAA;QAAA;QAAA;MAAA,QAAK;IAAA;MAAA;MAAA;MAAA;IAAA,QAC5C,eACN;MAAQ,OAAO,EAAEC,gBAAiB;MAAA,UAAC;IAAiB;MAAA;MAAA;MAAA;IAAA,QAAS,eAC7D;MAAQ,OAAO,EAAEN,cAAe;MAAA,UAAC;IAAe;MAAA;MAAA;MAAA;IAAA,QAAS,eACzD;MAAQ,OAAO,EAAEL,eAAgB;MAAA,UAAC;IAAS;MAAA;MAAA;MAAA;IAAA,QAAS,eACpD;MAAQ,OAAO,EAAEd,UAAW;MAAA,UAAC;IAAW;MAAA;MAAA;MAAA;IAAA,QAAS,eACjD;MAAA;MAAA;MAAA;IAAA,QAAM,eACN;MAAA,wBACE;QAAA,UAAK;MAAgB;QAAA;QAAA;QAAA;MAAA,QAAM,eAC3B;QAAK,EAAE,EAAC;MAAY;QAAA;QAAA;QAAA;MAAA,QAAO;IAAA;MAAA;MAAA;MAAA;IAAA,QACvB;EAAA,gBACL;AAEP;AAAC,KAlBuBwB,QAAQ;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}